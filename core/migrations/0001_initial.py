# Generated by Django 3.2.3 on 2021-05-28 02:45

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=200, unique=True, verbose_name='Nombre de Usuario')),
                ('email', models.CharField(max_length=200, unique=True, verbose_name='Email')),
                ('name', models.CharField(max_length=200)),
                ('surname', models.CharField(max_length=200)),
                ('celphone', models.CharField(max_length=15)),
                ('is_active', models.BooleanField(blank=True, default=True, verbose_name='Esta Activo?')),
                ('is_staff', models.BooleanField(blank=True, default=True, verbose_name='Permiso Administrador?')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Fecha Registro')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EventCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_event_category', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=500)),
            ],
            options={
                'verbose_name': 'Categoria evento',
                'verbose_name_plural': 'Categoria de eventos',
            },
        ),
        migrations.CreateModel(
            name='EventState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Estado Evento',
                'verbose_name_plural': 'Estado Eventos',
            },
        ),
        migrations.CreateModel(
            name='TaskCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_task_category', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=500)),
            ],
            options={
                'verbose_name': 'Categoria tarea',
                'verbose_name_plural': 'Categorias de Tareas',
            },
        ),
        migrations.CreateModel(
            name='TaskState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Estado Tarea',
                'verbose_name_plural': 'Estado Tareas',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_task', models.CharField(max_length=200)),
                ('description_task', models.CharField(max_length=500)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('update_at', models.DateField(auto_now=True, null=True)),
                ('deleted_at', models.DateField(blank=True, null=True)),
                ('deleted', models.BooleanField(default=False)),
                ('image', models.FileField(blank=True, null=True, upload_to='img/tasks/')),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_user', to=settings.AUTH_USER_MODEL)),
                ('taskCategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_category', to='core.taskcategory')),
            ],
            options={
                'verbose_name': 'Tarea',
                'verbose_name_plural': 'Tareas',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_event', models.CharField(max_length=200)),
                ('description_event', models.CharField(max_length=500)),
                ('place_event', models.CharField(blank=True, max_length=100, null=True)),
                ('date_event', models.DateField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('update_at', models.DateField(auto_now=True, null=True)),
                ('deleted_at', models.DateField(blank=True, null=True)),
                ('deleted', models.BooleanField(default=False)),
                ('image', models.FileField(blank=True, null=True, upload_to='img/events/')),
                ('eventCategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_category', to='core.eventcategory')),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventos',
            },
        ),
    ]
